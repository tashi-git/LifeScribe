name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: diary_db
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpass
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Initialize database
      run: |
        mysql --host=127.0.0.1 --port=3306 --user=testuser --password=testpass diary_db < db-init/init.sql
      env:
        MYSQL_PWD: testpass

    - name: Run tests
      run: |
        pytest test_app.py
      env:
        DB_HOST: 127.0.0.1
        DB_USER: testuser
        DB_PASSWORD: testpass
        DB_NAME: diary_db

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v3

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build Docker image
      run: |
        docker-compose build
    
  push:
    name: Push Docker Image
    runs-on: ubuntu-latest
    needs: build 

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build Docker image
      run: |
        docker build -t diary_app:latest
        
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Tag Docker Image
      run: |
        docker tag diary_app:latest ${{ secrets.DOCKERHUB_USERNAME }}/diary_app:latest
    
    - name: Push Docker Image
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/diary_app:latest
  
